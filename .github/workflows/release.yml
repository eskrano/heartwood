name: Release

on:
  push:
    branches: [master]

jobs:
  release-x86_64-linux-binaries:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Configure build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-x86_64-linux-${{ hashFiles('**/Cargo.lock') }}
      - name: Build the binaries
        uses: addnab/docker-run-action@v3
        with:
          image: registry.gitlab.com/rust_musl_docker/image:stable-latest
          options: -v ${{ github.workspace }}:/workdir -v /home/runner/.cargo/git:/root/.cargo/git -v /home/runner/.cargo/registry:/root/.cargo/registry
          run: |
            rustup target add x86_64-unknown-linux-musl
            cargo build --target=x86_64-unknown-linux-musl --package=radicle-httpd --release
            cargo build --target=x86_64-unknown-linux-musl --bin rad --release
            cargo build --target=x86_64-unknown-linux-musl --bin git-remote-rad --release
            chmod --recursive go+r /root/.cargo/registry
      - shell: bash
        run: |
          staging="x86_64-unknown-linux-musl"
          mkdir -p "$staging"
          cp target/x86_64-unknown-linux-musl/release/radicle-httpd "$staging"/
          cp target/x86_64-unknown-linux-musl/release/rad "$staging"/
          cp target/x86_64-unknown-linux-musl/release/git-remote-rad "$staging"/
          tar czf "$staging.tar.gz" "$staging"
          cp "$staging.tar.gz" "$staging"/
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/281042598092/locations/global/workloadIdentityPools/github-actions/providers/google-cloud'
          service_account: 'github-actions@radicle-services.iam.gserviceaccount.com'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: x86_64-unknown-linux-musl
          destination: heartwood-artifacts/${{ github.sha }}/

  release-aarch64-linux-binaries:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Configure build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            !target/debian
          key: cargo-aarch64-linux-${{ hashFiles('**/Cargo.lock') }}
      - name: Build the binaries
        uses: addnab/docker-run-action@v3
        with:
            image: messense/rust-musl-cross:aarch64-musl
            options: -v ${{ github.workspace }}:/home/rust/src -v /home/runner/.cargo/git:/root/.cargo/git -v /home/runner/.cargo/registry:/root/.cargo/registry
            run: |
              rustup target add aarch64-unknown-linux-musl
              cargo build --package=radicle-httpd --release
              cargo build --bin rad --release
              cargo build --bin git-remote-rad --release
      - shell: bash
        run: |
          staging="aarch64-unknown-linux-musl"
          mkdir -p "$staging"
          cp target/aarch64-unknown-linux-musl/release/radicle-httpd "$staging"/
          cp target/aarch64-unknown-linux-musl/release/rad "$staging"/
          cp target/aarch64-unknown-linux-musl/release/git-remote-rad "$staging"/
          tar czf "$staging.tar.gz" "$staging"
          cp "$staging.tar.gz" "$staging"/
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/281042598092/locations/global/workloadIdentityPools/github-actions/providers/google-cloud'
          service_account: 'github-actions@radicle-services.iam.gserviceaccount.com'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: aarch64-unknown-linux-musl
          destination: heartwood-artifacts/${{ github.sha }}/


  release-macos-binaries:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: macos-11
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      - name: Configure build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
      - name: Build the release binaries
        run: |
          cargo build --target ${{ matrix.target }} --package=radicle-httpd --release
          cargo build --target ${{ matrix.target }} --bin rad --release
          cargo build --target ${{ matrix.target }} --bin git-remote-rad --release
      - shell: bash
        run: |
          staging="${{ matrix.target }}"
          mkdir -p "$staging"
          cp target/${{ matrix.target }}/release/radicle-httpd "$staging"/
          cp target/${{ matrix.target }}/release/rad "$staging"/
          cp target/${{ matrix.target }}/release/git-remote-rad "$staging"/
          tar czf "$staging.tar.gz" "$staging"
          cp "$staging.tar.gz" "$staging"/
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/281042598092/locations/global/workloadIdentityPools/github-actions/providers/google-cloud'
          service_account: 'github-actions@radicle-services.iam.gserviceaccount.com'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: ${{ matrix.target }}
          destination: heartwood-artifacts/${{ github.sha }}
